{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "S3Permissions",
            "Effect": "Allow",
            "Action": [
                "s3:CreateBucket",
                "s3:PutBucketTagging",
                "s3:PutBucketPolicy",
                "s3:GetBucketPolicy",
                "s3:DeleteBucketPolicy",
                "s3:PutBucketVersioning",
                "s3:GetBucketVersioning",
                "s3:PutBucketAcl",
                "s3:GetBucketAcl",
                "s3:PutBucketCORS",
                "s3:GetBucketCORS",
                "s3:PutBucketWebsite",
                "s3:GetBucketWebsite",
                "s3:PutBucketNotification",
                "s3:GetBucketNotification",
                "s3:PutBucketLogging",
                "s3:GetBucketLogging",
                "s3:PutBucketReplication",
                "s3:GetBucketReplication",
                "s3:PutBucketRequestPayment",
                "s3:GetBucketRequestPayment",
                "s3:PutBucketTagging",
                "s3:GetBucketTagging",
                "s3:PutBucketLifecycle",
                "s3:GetBucketLifecycle",
                "s3:PutBucketLifecycleConfiguration",
                "s3:GetBucketLifecycleConfiguration",
                "s3:PutBucketAccelerateConfiguration",
                "s3:GetBucketAccelerateConfiguration",
                "s3:PutEncryptionConfiguration",
                "s3:GetEncryptionConfiguration",
                "s3:PutBucketEncryption",
                "s3:GetBucketEncryption",
                "s3:DeleteBucket",
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetObjectAcl",
                "s3:GetObjectVersionAcl",
                "s3:GetObjectTagging",
                "s3:GetObjectVersionTagging",
                "s3:GetObjectTorrent",
                "s3:GetObjectVersionTorrent",
                "s3:ListBucket",
                "s3:ListBucketVersions",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:PutObjectVersionAcl",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:CopyObject",
                "s3:AbortMultipartUpload",
                "s3:RestoreObject",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
                "s3:DeleteObjectTagging",
                "s3:DeleteObjectVersionTagging",
                "s3:CreateAccessPoint",
                "s3:DeleteAccessPoint",
                "s3:GetAccessPoint",
                "s3:GetAccessPointPolicy",
                "s3:PutAccessPointPolicy",
                "s3:ListAccessPoints",
                "s3:PutInventoryConfiguration",
                "s3:GetInventoryConfiguration",
                "s3:ListBucketInventoryConfigurations",
                "s3:PutMetricsConfiguration",
                "s3:GetMetricsConfiguration",
                "s3:ListBucketMetricsConfigurations",
                "s3:PutAnalyticsConfiguration",
                "s3:GetAnalyticsConfiguration",
                "s3:ListBucketAnalyticsConfigurations",
                "s3:ListAllMyBuckets",
                "s3:HeadBucket"
            ],
            "Resource": "*"
        },
        {
            "Sid": "LambdaPermissions",
            "Effect": "Allow",
            "Action": [
                "lambda:CreateFunction",
                "lambda:UpdateFunctionCode",
                "lambda:UpdateFunctionConfiguration",
                "lambda:PublishVersion",
                "lambda:CreateAlias",
                "lambda:UpdateAlias",
                "lambda:DeleteAlias",
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration",
                "lambda:ListFunctions",
                "lambda:ListVersionsByFunction",
                "lambda:ListAliases",
                "lambda:DeleteFunction",
                "lambda:InvokeFunction",
                "lambda:AddPermission",
                "lambda:RemovePermission",
                "lambda:GetPolicy",
                "lambda:TagResource",
                "lambda:UntagResource",
                "lambda:ListTags"
            ],
            "Resource": "*"
        },
        {
            "Sid": "LambdaLayersPermissions",
            "Effect": "Allow",
            "Action": [
                "lambda:PublishLayerVersion",
                "lambda:AddLayerVersionPermission",
                "lambda:RemoveLayerVersionPermission",
                "lambda:GetLayerVersion",
                "lambda:GetLayerVersionPolicy",
                "lambda:ListLayers",
                "lambda:ListLayerVersions",
                "lambda:DeleteLayerVersion"
            ],
            "Resource": "*"
        },
        {
            "Sid": "APIGatewayPermissions",
            "Effect": "Allow",
            "Action": [
                "apigateway:GET",
                "apigateway:POST",
                "apigateway:PUT",
                "apigateway:PATCH",
                "apigateway:DELETE",
                "apigateway:CreateRestApi",
                "apigateway:CreateResource",
                "apigateway:CreateMethod",
                "apigateway:CreateDeployment",
                "apigateway:CreateStage",
                "apigateway:CreateModel",
                "apigateway:CreateDocumentationPart",
                "apigateway:CreateDocumentationVersion",
                "apigateway:CreateBasePathMapping",
                "apigateway:CreateDomainName",
                "apigateway:CreateVpcLink",
                "apigateway:CreateRequestValidator",
                "apigateway:ImportRestApi",
                "apigateway:PutIntegration",
                "apigateway:PutMethodResponse",
                "apigateway:PutIntegrationResponse",
                "apigateway:UpdateRestApi",
                "apigateway:UpdateResource",
                "apigateway:UpdateMethod",
                "apigateway:UpdateStage",
                "apigateway:UpdateDeployment",
                "apigateway:UpdateModel",
                "apigateway:UpdateDocumentationPart",
                "apigateway:UpdateDocumentationVersion",
                "apigateway:UpdateBasePathMapping",
                "apigateway:UpdateDomainName",
                "apigateway:UpdateVpcLink",
                "apigateway:UpdateRequestValidator",
                "apigateway:UpdateAccount",
                "apigateway:UpdateApiKey",
                "apigateway:UpdateAuthorizer",
                "apigateway:UpdateUsagePlan",
                "apigateway:PutGatewayResponse",
                "apigateway:FlushStageCache",
                "apigateway:FlushStageAuthorizers",
                "apigateway:TestInvokeMethod",
                "apigateway:TagResource",
                "apigateway:UntagResource",
                "apigateway:GetResources",
                "apigateway:GetRestApis",
                "apigateway:GetResource",
                "apigateway:GetMethod",
                "apigateway:GetDeployment",
                "apigateway:GetDeployments",
                "apigateway:GetStage",
                "apigateway:GetStages",
                "apigateway:GetModel",
                "apigateway:GetModels",
                "apigateway:GetDocumentationPart",
                "apigateway:GetDocumentationParts",
                "apigateway:GetDocumentationVersion",
                "apigateway:GetDocumentationVersions",
                "apigateway:GetBasePathMapping",
                "apigateway:GetBasePathMappings",
                "apigateway:GetDomainName",
                "apigateway:GetDomainNames",
                "apigateway:GetVpcLink",
                "apigateway:GetVpcLinks",
                "apigateway:GetTagsForResource",
                "apigateway:GetExport",
                "apigateway:GetSdk",
                "apigateway:DeleteRestApi",
                "apigateway:DeleteResource",
                "apigateway:DeleteMethod",
                "apigateway:DeleteDeployment",
                "apigateway:DeleteStage",
                "apigateway:DeleteModel",
                "apigateway:DeleteDocumentationPart",
                "apigateway:DeleteDocumentationVersion",
                "apigateway:DeleteBasePathMapping",
                "apigateway:DeleteDomainName",
                "apigateway:DeleteVpcLink",
                "apigateway:DeleteRequestValidator",
                "apigateway:DeleteIntegration",
                "apigateway:DeleteIntegrationResponse",
                "apigateway:DeleteMethodResponse"
            ],
            "Resource": "*"
        },
        {
            "Sid": "DynamoDBPermissions",
            "Effect": "Allow",
            "Action": [
                "dynamodb:CreateTable",
                "dynamodb:CreateGlobalTable",
                "dynamodb:TagResource",
                "dynamodb:UpdateTable",
                "dynamodb:UpdateGlobalTable",
                "dynamodb:UpdateGlobalTableSettings",
                "dynamodb:UpdateTimeToLive",
                "dynamodb:UpdateContinuousBackups",
                "dynamodb:UpdateTableReplicaAutoScaling",
                "dynamodb:UpdateContributorInsights",
                "dynamodb:UntagResource",
                "dynamodb:DeleteTable",
                "dynamodb:DeleteBackup",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
                "dynamodb:DescribeGlobalTable",
                "dynamodb:DescribeGlobalTableSettings",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeTableReplicaAutoScaling",
                "dynamodb:DescribeContributorInsights",
                "dynamodb:DescribeExport",
                "dynamodb:DescribeKinesisStreamingDestination",
                "dynamodb:ListTables",
                "dynamodb:ListGlobalTables",
                "dynamodb:ListBackups",
                "dynamodb:ListExports",
                "dynamodb:ListTagsOfResource",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:CreateBackup",
                "dynamodb:RestoreTableFromBackup",
                "dynamodb:RestoreTableToPointInTime",
                "dynamodb:ExportTableToPointInTime",
                "dynamodb:EnableKinesisStreamingDestination",
                "dynamodb:DisableKinesisStreamingDestination",
                "dynamodb:GetShardIterator",
                "dynamodb:GetRecords",
                "dynamodb:DescribeStream",
                "dynamodb:ListStreams",
                "dynamodb:PutResourcePolicy",
                "dynamodb:GetResourcePolicy",
                "dynamodb:DeleteResourcePolicy"
            ],
            "Resource": "*"
        },
        {
            "Sid": "DynamoDBDAXPermissions",
            "Effect": "Allow",
            "Action": [
                "dax:CreateCluster",
                "dax:DeleteCluster",
                "dax:DescribeClusters",
                "dax:CreateParameterGroup",
                "dax:CreateSubnetGroup",
                "dax:DescribeParameterGroups",
                "dax:DescribeSubnetGroups",
                "dax:DescribeParameters",
                "dax:UpdateCluster",
                "dax:UpdateParameterGroup",
                "dax:UpdateSubnetGroup"
            ],
            "Resource": "*"
        },
        {
            "Sid": "StepFunctionsPermissions",
            "Effect": "Allow",
            "Action": [
                "states:CreateStateMachine",
                "states:CreateActivity",
                "states:TagResource",
                "states:UpdateStateMachine",
                "states:UpdateActivity",
                "states:UntagResource",
                "states:DeleteStateMachine",
                "states:DeleteActivity",
                "states:DescribeStateMachine",
                "states:DescribeActivity",
                "states:DescribeExecution",
                "states:GetExecutionHistory",
                "states:ListStateMachines",
                "states:ListActivities",
                "states:ListTagsForResource",
                "states:StartExecution",
                "states:StopExecution"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ALBPermissions",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets"
            ],
            "Resource": "*"
        },
        {
            "Sid": "EC2Permissions",
            "Effect": "Allow",
            "Action": [
                "ec2:RunInstances",
                "ec2:TerminateInstances",
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:RebootInstances",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DescribeTags",
                "ec2:AllocateAddress",
                "ec2:AssociateAddress",
                "ec2:DisassociateAddress",
                "ec2:ReleaseAddress",
                "ec2:DescribeAddresses",
                "ec2:CreateSecurityGroup",
                "ec2:DeleteSecurityGroup",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:AttachNetworkInterface",
                "ec2:DetachNetworkInterface",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:DescribeAvailabilityZones"
            ],
            "Resource": "*"
        },
        {
            "Sid": "Route53Permissions",
            "Effect": "Allow",
            "Action": [
                "route53:CreateHostedZone",
                "route53:GetHostedZone",
                "route53:ListHostedZones",
                "route53:ChangeResourceRecordSets",
                "route53:GetChange",
                "route53:ListResourceRecordSets",
                "route53:UpdateHostedZoneComment",
                "route53:DeleteHostedZone",
                "route53:CreateHealthCheck",
                "route53:GetHealthCheck",
                "route53:ListHealthChecks",
                "route53:UpdateHealthCheck",
                "route53:DeleteHealthCheck",
                "route53:TagResource",
                "route53:ListTagsForResource",
                "route53:UntagResource",
                "route53:CreateTrafficPolicy",
                "route53:CreateTrafficPolicyInstance",
                "route53:GetTrafficPolicy",
                "route53:GetTrafficPolicyInstance",
                "route53:UpdateTrafficPolicyInstance",
                "route53:DeleteTrafficPolicy",
                "route53:DeleteTrafficPolicyInstance"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ACMPermissions",
            "Effect": "Allow",
            "Action": [
                "acm:RequestCertificate",
                "acm:DeleteCertificate",
                "acm:DescribeCertificate",
                "acm:GetCertificate",
                "acm:ListCertificates",
                "acm:ListTagsForCertificate",
                "acm:AddTagsToCertificate",
                "acm:RemoveTagsFromCertificate",
                "acm:RenewCertificate",
                "acm:UpdateCertificateOptions",
                "acm:ResendValidationEmail",
                "acm:ExportCertificate",
                "acm:ImportCertificate"
            ],
            "Resource": "*"
        },
        {
            "Sid": "KMSPermissions",
            "Effect": "Allow",
            "Action": [
                "kms:CreateKey",
                "kms:CreateAlias",
                "kms:UpdateAlias",
                "kms:DeleteAlias",
                "kms:DescribeKey",
                "kms:EnableKey",
                "kms:DisableKey",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:ListKeys",
                "kms:ListAliases",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateRandom",
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ListResourceTags",
                "kms:PutKeyPolicy",
                "kms:GetKeyPolicy",
                "kms:GetKeyRotationStatus",
                "kms:EnableKeyRotation",
                "kms:DisableKeyRotation",
                "kms:ImportKeyMaterial",
                "kms:DeleteImportedKeyMaterial",
                "kms:CreateGrant",
                "kms:ListGrants",
                "kms:RevokeGrant",
                "kms:RetireGrant",
                "kms:UpdateKeyDescription",
                "kms:UpdateCustomKeyStore",
                "kms:ConnectCustomKeyStore",
                "kms:DisconnectCustomKeyStore",
                "kms:DescribeCustomKeyStores"
            ],
            "Resource": "*"
        },
        {
            "Sid": "IAMPermissions",
            "Effect": "Allow",
            "Action": [
                "iam:CreateRole",
                "iam:DeleteRole",
                "iam:GetRole",
                "iam:PassRole",
                "iam:ListRoles",
                "iam:PutRolePolicy",
                "iam:GetRolePolicy",
                "iam:DeleteRolePolicy",
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:CreateServiceLinkedRole",
                "iam:CreatePolicy",
                "iam:DeletePolicy",
                "iam:ListPolicyVersions",
                "iam:GetPolicy",
                "iam:CreatePolicyVersion",
                "iam:DeletePolicyVersion",
                "iam:SetDefaultPolicyVersion",
                "iam:TagRole",
                "iam:UntagRole",
                "iam:ListRoleTags"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CloudWatchPermissions",
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutMetricData",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DeleteAlarms",
                "cloudwatch:GetDashboard",
                "cloudwatch:PutDashboard",
                "cloudwatch:DeleteDashboards",
                "logs:CreateLogGroup",
                "logs:DeleteLogGroup",
                "logs:CreateLogStream",
                "logs:DeleteLogStream",
                "logs:PutLogEvents",
                "logs:GetLogEvents",
                "logs:FilterLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
                "logs:PutMetricFilter",
                "logs:DeleteMetricFilter",
                "logs:DescribeMetricFilters"
            ],
            "Resource": "*"
        },
        {
            "Sid": "SNSPermissions",
            "Effect": "Allow",
            "Action": [
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:ListTopics",
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:TagResource",
                "sns:UntagResource",
                "sns:ListTagsForResource",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:ListSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "sns:GetSubscriptionAttributes",
                "sns:SetSubscriptionAttributes",
                "sns:ConfirmSubscription",
                "sns:Publish",
                "sns:PublishBatch",
                "sns:CreatePlatformApplication",
                "sns:DeletePlatformApplication",
                "sns:ListPlatformApplications",
                "sns:GetPlatformApplicationAttributes",
                "sns:SetPlatformApplicationAttributes",
                "sns:CreatePlatformEndpoint",
                "sns:DeleteEndpoint",
                "sns:ListEndpointsByPlatformApplication",
                "sns:GetEndpointAttributes",
                "sns:SetEndpointAttributes",
                "sns:AddPermission",
                "sns:RemovePermission"
            ],
            "Resource": "*"
        },
        {
            "Sid": "SQSPermissions",
            "Effect": "Allow",
            "Action": [
                "sqs:CreateQueue",
                "sqs:DeleteQueue",
                "sqs:ListQueues",
                "sqs:GetQueueUrl",
                "sqs:GetQueueAttributes",
                "sqs:SetQueueAttributes",
                "sqs:TagQueue",
                "sqs:UntagQueue",
                "sqs:ListQueueTags",
                "sqs:SendMessage",
                "sqs:SendMessageBatch",
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:DeleteMessageBatch",
                "sqs:PurgeQueue",
                "sqs:ChangeMessageVisibility",
                "sqs:ChangeMessageVisibilityBatch",
                "sqs:AddPermission",
                "sqs:RemovePermission"
            ],
            "Resource": "*"
        }
    ]
}